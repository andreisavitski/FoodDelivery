version: '3.8'

networks:
  web:
    driver: bridge

services:
  fooddelivery-backend:
    container_name: fooddelivery-backend
    build: ./
    ports:
      - "8080:8080"
    depends_on:
      - fooddeliverydb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://fooddeliverydb:5432/fooddeliverydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=sa
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    networks:
      - web

  fooddelivery-order-logger:
    container_name: fooddelivery-order-logger_container
    image: fooddelivery-order-logger:latest
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://orderloggerdb:27017/orderloggerdb
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8081:8081"
    depends_on:
      - orderloggerdb
    networks:
      - web

  fooddeliverydb:
    image: postgres:14.9
    container_name: fooddeliverydb
    environment:
      - POSTGRES_DB=fooddeliverydb
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-sa}
      - PGDATA=/data/postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/db-data:/data/postgres
    restart: unless-stopped
    networks:
      - web

  orderloggerdb:
    image: mongo:latest
    container_name: orderloggerdb
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=orderloggerdb
    ports:
      - "27017:27017"
    volumes:
      - ./data/db-data:/data/mongo
    networks:
      - web

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7.3
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin
    networks:
      - web

  eureka-server:
    image: fooddelivery-eureka-server:latest
    ports:
      - "8761:8761"
    networks:
      - web
    environment:
      eureka.instance.hostname: eureka-server
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./data/rabbitmq/data/:/var/lib/rabbitmq/
      - ./data/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - web

  zookeeper:
    image: bitnami/zookeeper:3.9.2
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - ./data/zoo/data:/var/lib/zookeeper/data
      - ./data/zoo/log:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    networks:
      - web

  kafka:
    image: bitnami/kafka:3.4.1
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - web

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - web